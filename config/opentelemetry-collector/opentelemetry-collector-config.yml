extensions:
  basicauth/client:
    client_auth:
      username: admin
      password: admin

receivers:
  otlp:
    protocols:
      grpc:
      http:
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

exporters:
  debug:
  otlp/jaeger:
    endpoint: "jaeger:4317"
    tls:
      insecure: true
  # opensearch/traces:
  #   http:
  #     endpoint: http://opensearch:9200
  #     auth:
  #       authenticator: basicauth/client
  #     tls:
  #       insecure: true
  #   timeout:
  #   retry_on_failure:
  #     enabled: true
  #     initial_interval: 100000000
  #     randomization_factor: 0.5
  #   dataset: traces
  # opensearch/logs:
  #   http:
  #     endpoint: http://opensearch:9200
  #     auth:
  #       authenticator: basicauth/client
  #     tls:
  #       insecure: true
  #   timeout:
  #   retry_on_failure:
  #     enabled: true
  #     initial_interval: 100000000
  #     randomization_factor: 0.5
  #   dataset: logs
  otlp/traces:
    endpoint: "data-prepper:21890"
    tls:
      insecure: true
  otlp/data-prepper:
    endpoint: "data-prepper:21891"
    tls:
      insecure: true
  otlp/logs:
    endpoint: "data-prepper:21892"
    tls:
      insecure: true
  otlphttp/prometheus:
    endpoint: "http://prometheus:9090/api/v1/otlp"
    tls:
      insecure: true

processors:
  batch:
  filter/ottl:
    error_mode: ignore
    metrics:
      metric:
        - 'name == "rpc.server.duration"'
  transform:
    metric_statements:
      - context: metric
        statements:
          - set(description, "") where name == "queueSize"
          - set(description, "") where name == "http.client.duration"

connectors:
  spanmetrics:

service:
  extensions: [basicauth/client]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      # exporters: [otlp, debug, spanmetrics, otlp/traces, opensearch/traces]
      exporters: [otlp/jaeger, debug, spanmetrics, otlp/traces]
    metrics:
      receivers: [otlp, spanmetrics]
      processors: [filter/ottl, transform, batch]
      exporters: [otlphttp/prometheus, otlp/data-prepper, debug]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/logs, debug]